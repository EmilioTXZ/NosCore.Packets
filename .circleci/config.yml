version: 2
jobs:
  build:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - checkout
      - run: 
            name: Build solution
            command : | 
                dotnet restore
                dotnet build
  test_unit_testing:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - checkout
      - run: 
            name: Run tests on ChickenAPI.Packets
            command : |
                dotnet test test/ChickenAPI.Packets.Tests -v m
  test_code_quality:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - run: 
            name: Test Code Quality
            command : echo "todo"
  test_validate_documentation:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - checkout
      - run: 
            name: Build Packet List documentation generator
            command : | 
                dotnet restore
                dotnet build src/ChickenAPI.Packets.Documentator -c Release -o /tmp/documentator
                dotnet /tmp/documentator/ChickenAPI.Packets.Documentator.dll /tmp/PACKET_LIST_TEST.md
                diff /tmp/PACKET_LIST_TEST.md PACKET_LIST.md 
      - store_artifacts:
            path: /tmp/PACKET_LIST_TEST.md
  release_nuget_packages:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - checkout
      - run: 
            name: Build ChickenAPI package (nuget)
            command : | 
                dotnet build -c Release
                dotnet pack -c Release -o /tmp/nupkgs -v m
                dotnet nuget push /tmp/nupkgs/ChickenAPI.Packets.${CIRCLE_TAG}.nupkg -k ${NUGET_API_KEY} -s "https://api.nuget.org/v3/index.json"
      - store_artifacts:
            path: /tmp/nupkgs
  release_github:
    docker:
      - image: circleci/golang:1.12
    steps:
      - attach_workspace:
          at: /tmp/nupkgs
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=${CIRCLE_CI_TAG}
            ARTIFACTS_PATH=/tmp/nupkgs
            echo ${CIRCLE_PROJECT_USERNAME}
            ghr ${VERSION} ${ARTIFACTS_PATH} -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test_unit_testing:
          requires:
            - build
      - test_code_quality:
          requires:
            - build
      - test_validate_documentation:
          requires:
            - build
  build_test_and_release:
    jobs:
      - build:
            filters:
                tags:
                    only: /^((\d+\.)+\d+)/
                branches:
                    only: master
      - release_nuget_packages:
          requires:
            - build
          filters:
            tags:
              only: /^((\d+\.)+\d+)/
            branches:
              ignore: /.*/
      - release_github:
          requires:
            - build
            - release_nuget_packages
          filters:
            tags:
              only: /^((\d+\.)+\d+)/
            branches:
              ignore: /.*/
